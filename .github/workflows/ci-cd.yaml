name: Deploy to AWS

on:
  push:
    branches: ["main"]

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Provision Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ACTION_ROLE }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform init -input=false

      - name: Pre-import existing resources
        run: |
          set -e

          echo "Checking S3 bucket..."
          BUCKET_NAME="luffy-utrains-5000e"
          if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "✅ Bucket exists. Importing into Terraform state..."
            terraform import aws_s3_bucket.frontend "$BUCKET_NAME" || echo "Already imported."
          fi

          echo "Checking DynamoDB table..."
          TABLE_NAME="userserverless"
          if aws dynamodb describe-table --table-name "$TABLE_NAME" 2>/dev/null; then
            echo "✅ Table exists. Importing into Terraform state..."
            terraform import aws_dynamodb_table.users "$TABLE_NAME" || echo "Already imported."
          fi

          echo "Checking IAM Role..."
          ROLE_NAME="lambda_exec_role"
          if aws iam get-role --role-name "$ROLE_NAME" 2>/dev/null; then
            echo "✅ IAM Role exists. Importing into Terraform state..."
            terraform import aws_iam_role.lambda_exec "$ROLE_NAME" || echo "Already imported."
          fi

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: |
          set -e
          terraform apply -auto-approve -input=false || (
            echo "⚠️ First apply failed. Retrying after 10s..."
            sleep 10
            terraform apply -auto-approve -input=false
          )

      - name: Sync Files to S3
        run: aws s3 sync ./s3_files "s3://luffy-utrains-5000e" --delete
